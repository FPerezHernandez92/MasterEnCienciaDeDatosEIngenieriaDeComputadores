plot(medv~lstat)
points(lstat,fitknn1$fitted.values,col="blue",pch=20)
points(lstat,fitknn5$fitted.values,col="red",pch=20)
points(lstat,fitknn6$fitted.values,col="green",pch=20)
nombre <- "ICD/california"
run_lm_fold <- function(i, x, tt = "test") {
file <- paste(x, "-5-", i, "tra.dat", sep="")
x_tra <- read.csv(file, comment.char="@")
file <- paste(x, "-5-", i, "tst.dat", sep="")
x_tst <- read.csv(file, comment.char="@")
In <- length(names(x_tra)) - 1
names(x_tra)[1:In] <- paste ("X", 1:In, sep="")
names(x_tra)[In+1] <- "Y"
names(x_tst)[1:In] <- paste ("X", 1:In, sep="")
names(x_tst)[In+1] <- "Y"
if (tt == "train") {
test <- x_tra
}
else {
test <- x_tst
}
fitMulti=lm(Y~.,x_tra)
yprime=predict(fitMulti,test)
sum(abs(test$Y-yprime)^2)/length(yprime) ##MSE
}
lmMSEtrain<-mean(sapply(1:5,run_lm_fold,nombre,"train"))
nombre <- "california"
run_lm_fold <- function(i, x, tt = "test") {
file <- paste(x, "-5-", i, "tra.dat", sep="")
x_tra <- read.csv(file, comment.char="@")
file <- paste(x, "-5-", i, "tst.dat", sep="")
x_tst <- read.csv(file, comment.char="@")
In <- length(names(x_tra)) - 1
names(x_tra)[1:In] <- paste ("X", 1:In, sep="")
names(x_tra)[In+1] <- "Y"
names(x_tst)[1:In] <- paste ("X", 1:In, sep="")
names(x_tst)[In+1] <- "Y"
if (tt == "train") {
test <- x_tra
}
else {
test <- x_tst
}
fitMulti=lm(Y~.,x_tra)
yprime=predict(fitMulti,test)
sum(abs(test$Y-yprime)^2)/length(yprime) ##MSE
}
lmMSEtrain<-mean(sapply(1:5,run_lm_fold,nombre,"train"))
lmMSEtrain<-mean(sapply(1:5,run_lm_fold,nombre,"train"))
lmMSEtest<-mean(sapply(1:5,run_lm_fold,nombre,"test"))
nombre <- "ICD/california"
nombre <- "california"
run_knn_fold <- function(i, x, tt = "test") {
file <- paste(x, "-5-", i, "tra.dat", sep="")
x_tra <- read.csv(file, comment.char="@")
file <- paste(x, "-5-", i, "tst.dat", sep="")
x_tst <- read.csv(file, comment.char="@")
In <- length(names(x_tra)) - 1
names(x_tra)[1:In] <- paste ("X", 1:In, sep="")
names(x_tra)[In+1] <- "Y"
names(x_tst)[1:In] <- paste ("X", 1:In, sep="")
names(x_tst)[In+1] <- "Y"
if (tt == "train") {
test <- x_tra
}
else {
test <- x_tst
}
fitMulti=kknn(Y~.,x_tra,test)
yprime=fitMulti$fitted.values
sum(abs(test$Y-yprime)^2)/length(yprime) ##MSE
}
knnMSEtrain<-mean(sapply(1:5,run_knn_fold,nombre,"train"))
knnMSEtest<-mean(sapply(1:5,run_knn_fold,nombre,"test"))
California <- read.csv("california.dat", comment.char="@")
n<-length(names(California)) -1;
names(California)[1:n] <- paste ("X", 1:n, sep=""); names(California)[n+1] <- "Y"
temp <- California
plotY <- function (x,y) {
plot(temp[,y]~temp[,x], xlab=names(temp)[x], ylab=names(temp)[y])
}
par(mfrow=c(2,4)); x<-sapply(1:(dim(temp)[2]-1), plotY, dim(temp)[2]); par(mfrow=c(1,1))
fitX8 <- lm(Y~X8, California)
fitX7 <- lm(Y~X7, California)
fitX4 <- lm(Y~X4, California)
fit1=lm(Y~X8+I(X8^2)+I(X8^3)+I(log(X3))+I(log(X4/X6)) +I(log(X5/X6))+I(log(X6/X7))+I(log(X7)),California)
fit2=lm(Y~., California)
fit3=lm(Y~.+X4*X7*X8, California)
fit4=lm(Y~.+I(X1^2)+I(X6^2)+I(X8^2)+I(X8^3)+I(X8^4) +X7*X8*X4*X5*X6, California)
summary(fit1)$adj.r.squared
summary(fit2)$adj.r.squared
summary(fit3)$adj.r.squared
summary(fit4)$adj.r.squared
nombre <- "ICD/california"
run_lm_fold <- function(i, x, tt = "test") {
file <- paste(x, "-5-", i, "tra.dat", sep=""); x_tra <- read.csv(file, comment.char="@")
file <- paste(x, "-5-", i, "tst.dat", sep=""); x_tst <- read.csv(file, comment.char="@")
In <- length(names(x_tra)) - 1
names(x_tra)[1:In] <- paste ("X", 1:In, sep="");
names(x_tra)[In+1] <- "Y"
names(x_tst)[1:In] <- paste ("X", 1:In, sep="");
names(x_tst)[In+1] <- "Y"
if (tt == "train") { test <- x_tra }
else { test <- x_tst }
fitMulti=lm(Y~.+I(X1^2)+I(X6^2)+I(X8^2)+I(X8^3) +I(X8^4)+X7*X8*X4*X5*X6,x_tra)
yprime=predict(fitMulti,test)
sum(abs(test$Y-yprime)^2)/length(yprime) ##MSE
}
lmMSEtrain<-mean(sapply(1:5,run_lm_fold,nombre,"train"))
nombre <- "california"
run_lm_fold <- function(i, x, tt = "test") {
file <- paste(x, "-5-", i, "tra.dat", sep=""); x_tra <- read.csv(file, comment.char="@")
file <- paste(x, "-5-", i, "tst.dat", sep=""); x_tst <- read.csv(file, comment.char="@")
In <- length(names(x_tra)) - 1
names(x_tra)[1:In] <- paste ("X", 1:In, sep="");
names(x_tra)[In+1] <- "Y"
names(x_tst)[1:In] <- paste ("X", 1:In, sep="");
names(x_tst)[In+1] <- "Y"
if (tt == "train") { test <- x_tra }
else { test <- x_tst }
fitMulti=lm(Y~.+I(X1^2)+I(X6^2)+I(X8^2)+I(X8^3) +I(X8^4)+X7*X8*X4*X5*X6,x_tra)
yprime=predict(fitMulti,test)
sum(abs(test$Y-yprime)^2)/length(yprime) ##MSE
}
lmMSEtrain<-mean(sapply(1:5,run_lm_fold,nombre,"train"))
lmMSEtest<-mean(sapply(1:5,run_lm_fold,nombre,"test"))
resultados <- read.csv("ICD/regr_test_alumnos.csv")
resultados <- read.csv("regr_test_alumnos.csv")
tablatst <- cbind(resultados[,2:dim(resultados)[2]])
colnames(tablatst) <- names(resultados)[2:dim(resultados)[2]]
rownames(tablatst) <- resultados[,1]
resultados <- read.csv("regr_train_alumnos.csv")
tablatra <- cbind(resultados[,2:dim(resultados)[2]])
colnames(tablatra) <- names(resultados)[2:dim(resultados)[2]]
rownames(tablatra) <- resultados[,1]
difs <- (tablatst[,1] - tablatst[,2]) / tablatst[,1]
wilc_1_2 <- cbind(ifelse (difs<0, abs(difs)+0.1, 0+0.1), ifelse (difs>0, abs(difs)+0.1, 0+0.1))
colnames(wilc_1_2) <- c(colnames(tablatst)[1], colnames(tablatst)[2])
head(wilc_1_2)
LMvsKNNtst <- wilcox.test(wilc_1_2[,1], wilc_1_2[,2], alternative = "two.sided", paired=TRUE)
Rmas <- LMvsKNNtst$statistic
pvalue <- LMvsKNNtst$p.value
LMvsKNNtst <- wilcox.test(wilc_1_2[,2], wilc_1_2[,1], alternative = "two.sided", paired=TRUE)
Rmenos <- LMvsKNNtst$statistic
Rmas
Rmenos
pvalue
test_friedman <- friedman.test(as.matrix(tablatst))
test_friedman
tam <- dim(tablatst)
groups <- rep(1:tam[2], each=tam[1])
pairwise.wilcox.test(as.matrix(tablatst), groups, p.adjust = "holm", paired = TRUE)
xtra <- read.csv("ICD/california.dat", comment.char = "@")
xtra <- read.csv("california.dat", comment.char = "@")
names(xtra) <- c("Longitude", "Latitude", "HousingMedianAge",
"TotalRooms", "TotalBedrooms", "Population", "Households", "MedianIncome", "MedianHouseValue")
n <- length(names(xtra)) - 1
names(xtra)[1:n] <- paste ("X", 1:n, sep="")
names(xtra)[n+1] <- "Y"
attach(xtra)
fitknn1 <- kknn(Y ~ ., xtra,xtra)
names(fitknn1)
plot(Y~X8)
points(X8,fitknn1$fitted.values,col="blue",pch=20)
yprime = fitknn1$fitted.values
sqrt(sum((xtra$Y-yprime)^2)/length(yprime)) #RMSE
medv<-Y
lstat<-X8
rm<-X2
age<-X1
crim<-X3
dis<-X4
black<-X5
nox<-X6
chas <- X7
fitknn2 <- kknn(Y ~ X8*X2+I(X8^2)+X1+X3+X4, xtra, xtra)
yprime = fitknn2$fitted.values; sqrt(sum((xtra$Y-yprime)^2)/length(yprime)) #RMSE
fitknn3 <- kknn(Y ~ X8*X2+I(X8^2)+X1+X3+X4+X5+X6, xtra, xtra)
yprime = fitknn3$fitted.values; sqrt(sum((xtra$Y-yprime)^2)/length(yprime)) #RMSE
fitknn4 <- kknn(Y ~ . + X8*X2+I(X8^2) - X7, xtra, xtra)
yprime = fitknn4$fitted.values; sqrt(sum((xtra$Y-yprime)^2)/length(yprime)) #RMSE
fitknn5 <- kknn(Y ~ . - X7, xtra, xtra)
yprime = fitknn5$fitted.values; sqrt(sum((xtra$Y-yprime)^2)/length(yprime)) #RMSE
plot(Y~X8)
points(lstat,fitknn1$fitted.values,col="blue",pch=20)
points(lstat,fitknn4$fitted.values,col="red",pch=20)
points(lstat,fitknn5$fitted.values,col="green",pch=20)
nombre <- "ICD/california"
nombre <- "california"
run_lm_fold <- function(i, x, tt = "test") {
file <- paste(x, "-5-", i, "tra.dat", sep="")
x_tra <- read.csv(file, comment.char="@")
file <- paste(x, "-5-", i, "tst.dat", sep="")
x_tst <- read.csv(file, comment.char="@")
In <- length(names(x_tra)) - 1
names(x_tra)[1:In] <- paste ("X", 1:In, sep="")
names(x_tra)[In+1] <- "Y"
names(x_tst)[1:In] <- paste ("X", 1:In, sep="")
names(x_tst)[In+1] <- "Y"
if (tt == "train") {
test <- x_tra
}
else {
test <- x_tst
}
fitMulti=lm(Y~.,x_tra)
yprime=predict(fitMulti,test)
sum(abs(test$Y-yprime)^2)/length(yprime) ##MSE
}
lmMSEtrain<-mean(sapply(1:5,run_lm_fold,nombre,"train"))
lmMSEtest<-mean(sapply(1:5,run_lm_fold,nombre,"test"))
nombre <- "ICD/california"
nombre <- "california"
run_knn_fold <- function(i, x, tt = "test") {
file <- paste(x, "-5-", i, "tra.dat", sep="")
x_tra <- read.csv(file, comment.char="@")
file <- paste(x, "-5-", i, "tst.dat", sep="")
x_tst <- read.csv(file, comment.char="@")
In <- length(names(x_tra)) - 1
names(x_tra)[1:In] <- paste ("X", 1:In, sep="")
names(x_tra)[In+1] <- "Y"
names(x_tst)[1:In] <- paste ("X", 1:In, sep="")
names(x_tst)[In+1] <- "Y"
if (tt == "train") {
test <- x_tra
}
else {
test <- x_tst
}
fitMulti=kknn(Y~.,x_tra,test)
yprime=fitMulti$fitted.values
sum(abs(test$Y-yprime)^2)/length(yprime) ##MSE
}
knnMSEtrain<-mean(sapply(1:5,run_knn_fold,nombre,"train"))
knnMSEtest<-mean(sapply(1:5,run_knn_fold,nombre,"test"))
lmMSEtest
knnMSEtest
California <- read.csv("ICD/california.dat", comment.char="@")
California <- read.csv("california.dat", comment.char="@")
n<-length(names(California)) -1;
names(California)[1:n] <- paste ("X", 1:n, sep=""); names(California)[n+1] <- "Y"
temp <- California
plotY <- function (x,y) {
plot(temp[,y]~temp[,x], xlab=names(temp)[x], ylab=names(temp)[y])
}
par(mfrow=c(2,4)); x<-sapply(1:(dim(temp)[2]-1), plotY, dim(temp)[2]); par(mfrow=c(1,1))
fitX8 <- lm(Y~X8, California)
fitX7 <- lm(Y~X7, California)
fitX4 <- lm(Y~X4, California)
summary(fitX8) #RSquared: 0.4734
summary(fitX7) #RSquared: 0.004294
summary(fitX4) #RSquared: 0.01796
fit1=lm(Y~X8+I(X8^2)+I(X8^3)+I(log(X3))+I(log(X4/X6)) +I(log(X5/X6))+I(log(X6/X7))+I(log(X7)),California)
fit2=lm(Y~., California)
fit3=lm(Y~.+X4*X7*X8, California)
fit4=lm(Y~.+I(X1^2)+I(X6^2)+I(X8^2)+I(X8^3)+I(X8^4) +X7*X8*X4*X5*X6, California)
summary(fit1)$adj.r.squared
summary(fit2)$adj.r.squared
summary(fit3)$adj.r.squared
summary(fit4)$adj.r.squared
nombre <- "ICD/california"
nombre <- "california"
run_lm_fold <- function(i, x, tt = "test") {
file <- paste(x, "-5-", i, "tra.dat", sep=""); x_tra <- read.csv(file, comment.char="@")
file <- paste(x, "-5-", i, "tst.dat", sep=""); x_tst <- read.csv(file, comment.char="@")
In <- length(names(x_tra)) - 1
names(x_tra)[1:In] <- paste ("X", 1:In, sep="");
names(x_tra)[In+1] <- "Y"
names(x_tst)[1:In] <- paste ("X", 1:In, sep="");
names(x_tst)[In+1] <- "Y"
if (tt == "train") { test <- x_tra }
else { test <- x_tst }
fitMulti=lm(Y~.+I(X1^2)+I(X6^2)+I(X8^2)+I(X8^3) +I(X8^4)+X7*X8*X4*X5*X6,x_tra)
yprime=predict(fitMulti,test)
sum(abs(test$Y-yprime)^2)/length(yprime) ##MSE
}
lm2MSEtrain<-mean(sapply(1:5,run_lm_fold,nombre,"train"))
lm2MSEtest<-mean(sapply(1:5,run_lm_fold,nombre,"test"))
nombre <- "california"
run_knn_fold <- function(i, x, tt = "test") {
file <- paste(x, "-5-", i, "tra.dat", sep=""); x_tra <- read.csv(file, comment.char="@")
file <- paste(x, "-5-", i, "tst.dat", sep=""); x_tst <- read.csv(file, comment.char="@")
In <- length(names(x_tra)) - 1
names(x_tra)[1:In] <- paste ("X", 1:In, sep="");
names(x_tra)[In+1] <- "Y"
names(x_tst)[1:In] <- paste ("X", 1:In, sep="");
names(x_tst)[In+1] <- "Y"
if (tt == "train") { test <- x_tra }
else { test <- x_tst }
fitMulti=kknn(Y~.+I(X1^2)+I(X6^2)+I(X8^2)+I(X8^3) +I(X8^4)+X7*X8*X4*X5*X6,x_tra,test)
yprime=fitMulti$fitted.values
sum(abs(test$Y-yprime)^2)/length(yprime) ##MSE
}
knn2MSEtrain<-mean(sapply(1:5,run_knn_fold,nombre,"train"))
knn2MSEtest<-mean(sapply(1:5,run_knn_fold,nombre,"test"))
lm2MSEtest
knn2MSEtest
resultados <- read.csv("ICD/regr_test_alumnos.csv")
resultados <- read.csv("regr_test_alumnos.csv")
tablatst <- cbind(resultados[,2:dim(resultados)[2]])
colnames(tablatst) <- names(resultados)[2:dim(resultados)[2]]
rownames(tablatst) <- resultados[,1]
resultados <- read.csv("ICD/regr_train_alumnos.csv")
resultados <- read.csv("regr_train_alumnos.csv")
tablatra <- cbind(resultados[,2:dim(resultados)[2]])
colnames(tablatra) <- names(resultados)[2:dim(resultados)[2]]
rownames(tablatra) <- resultados[,1]
difs <- (tablatst[,1] - tablatst[,2]) / tablatst[,1]
wilc_1_2 <- cbind(ifelse (difs<0, abs(difs)+0.1, 0+0.1), ifelse (difs>0, abs(difs)+0.1, 0+0.1))
colnames(wilc_1_2) <- c(colnames(tablatst)[1], colnames(tablatst)[2])
head(wilc_1_2)
LMvsKNNtst <- wilcox.test(wilc_1_2[,1], wilc_1_2[,2], alternative = "two.sided", paired=TRUE)
Rmas <- LMvsKNNtst$statistic
pvalue <- LMvsKNNtst$p.value
LMvsKNNtst <- wilcox.test(wilc_1_2[,2], wilc_1_2[,1], alternative = "two.sided", paired=TRUE)
Rmenos <- LMvsKNNtst$statistic
Rmas
Rmenos
pvalue
test_friedman <- friedman.test(as.matrix(tablatst))
test_friedman
tam <- dim(tablatst)
groups <- rep(1:tam[2], each=tam[1])
pairwise.wilcox.test(as.matrix(tablatst), groups, p.adjust = "holm", paired = TRUE)
difs <- (tablatra[,1] - tablatra[,2]) / tablatra[,1]
wilc_1_2 <- cbind(ifelse (difs<0, abs(difs)+0.1, 0+0.1), ifelse (difs>0, abs(difs)+0.1, 0+0.1))
colnames(wilc_1_2) <- c(colnames(tablatra)[1], colnames(tablatra)[2])
head(wilc_1_2)
LMvsKNNtra <- wilcox.test(wilc_1_2[,1], wilc_1_2[,2], alternative = "two.sided", paired=TRUE)
Rmas <- LMvsKNNtra$statistic
pvalue <- LMvsKNNtra$p.value
LMvsKNNtst <- wilcox.test(wilc_1_2[,2], wilc_1_2[,1], alternative = "two.sided", paired=TRUE)
Rmenos <- LMvsKNNtra$statistic
Rmas
Rmenos
pvalue
test_friedman <- friedman.test(as.matrix(tablatra))
test_friedman
tam <- dim(tablatra)
groups <- rep(1:tam[2], each=tam[1])
pairwise.wilcox.test(as.matrix(tablatra), groups, p.adjust = "holm", paired = TRUE)
source('~/ayuda/TrabajoFinal_EvaAlmansa/02_Regresion.R')
resultados_test <- read.csv("regr_test_alumnos.csv")
tablatst <- cbind(resultados_test[,2:dim(resultados_test)[2]])
colnames(tablatst) <- names(resultados_test)[2:dim(resultados_test)[2]]
rownames(tablatst) <- resultados_test[,1]
resultados_train <- read.csv("regr_train_alumnos.csv")
tablatra <- cbind(resultados_train[,2:dim(resultados_train)[2]])
colnames(tablatra) <- names(resultados_train)[2:dim(resultados_train)[2]]
rownames(tablatra) <- resultados_train[,1]
tablatst
tablatst["baseball",1] <-  as.numeric(df[8,10])
tablatst["baseball",2] <-  as.numeric(df2[8,2])
tablatst["baseball",]
tablatra["baseball",1] <-  as.numeric(df[8,9])
tablatra["baseball",2] <-  as.numeric(df2[8,1])
tablatra["baseball",]
df[8,10]
df2[f8,2]
df2[8,2]
difs <- (as.numeric(tablatst[,1]) - as.numeric(tablatst[,2])) / as.numeric(tablatst[,1])
wilc_1_2 <- cbind(ifelse (difs<0, abs(difs)+0.1, 0+0.1), ifelse (difs>0, abs(difs)+0.1, 0+0.1))
colnames(wilc_1_2) <- c(colnames(tablatst)[1], colnames(tablatst)[2])
head(wilc_1_2)
LMvsKNNtst <- wilcox.test(wilc_1_2[,1], wilc_1_2[,2], alternative = "two.sided", paired=TRUE)
Rmas <- LMvsKNNtst$statistic
pvalue <- LMvsKNNtst$p.value
LMvsKNNtst <- wilcox.test(wilc_1_2[,2], wilc_1_2[,1], alternative = "two.sided", paired=TRUE)
Rmenos <- LMvsKNNtst$statistic
Rmas
Rmenos
pvalue
difs <- (as.numeric(tablatra[,1]) - as.numeric(tablatra[,2])) / as.numeric(tablatra[,1])
wilc_1_2 <- cbind(ifelse (difs<0, abs(difs)+0.1, 0+0.1), ifelse (difs>0, abs(difs)+0.1, 0+0.1))
colnames(wilc_1_2) <- c(colnames(tablatra)[1], colnames(tablatra)[2])
head(wilc_1_2)
LMvsKNNtst <- wilcox.test(wilc_1_2[,1], wilc_1_2[,2], alternative = "two.sided", paired=TRUE)
Rmas <- LMvsKNNtst$statistic
pvalue <- LMvsKNNtst$p.value
LMvsKNNtst <- wilcox.test(wilc_1_2[,2], wilc_1_2[,1], alternative = "two.sided", paired=TRUE)
Rmenos <- LMvsKNNtst$statistic
Rmas
Rmenos
pvalue
test_friedman <- friedman.test(as.matrix(tablatst))
test_friedman
tam <- dim(tablatst)
groups <- rep(1:tam[2], each=tam[1])
pairwise.wilcox.test(as.matrix(tablatst), groups, p.adjust = "holm", paired = TRUE)
source('C:/Users/herpe/Dropbox/zMaster/zRStudio/Master-en-Ciencia-De-Datos-e-Ingeniería-de-Computadores/1 Introduccion a la Ciencia de Datos/3 Ejercicios regresion/Laboratorio1.R')
require(ISLR)
require(MASS)
Boston
fix(Boston)
help(Boston)
attach(Boston)
temp <- Boston
plotY <- function (x,y) {
plot(temp[,y]~temp[,x], xlab=paste(names(temp)[x]," X",x,sep=""), ylab=names(temp)[y])
}
par(mfrow=c(3,4))
x <- sapply(1:(dim(temp)[2]-1), plotY, dim(temp)[2])
par(mfrow=c(1,1))
par(mfrow=c(3,3))
x <- sapply(c(1, 5, 6, 7, 8, 10, 11, 12, 13), plotY, dim(temp)[2])
par(mfrow=c(1,1))
fit1=lm(medv~lstat)
fit1
fit2=lm(medv~rm)
fit2
summary(fit1)
par(mfrow=c(2,1))
plot(medv~lstat,Boston)
abline(fit1,col="red")
confint(fit1)
summary(fit2)
plot(medv~rm,Boston)
abline(fit2,col="blue")
par(mfrow=c(1,1))
confint(fit2)
sqrt(sum(fit1$residuals^2)/length(fit1$residuals))
predict(fit1,data.frame(lstat=c(5,10,15)))
yprime=predict(fit1,data.frame(lstat=Boston$lstat))
sqrt(sum(abs(Boston$medv-yprime)^2)/length(yprime))
fit3=lm(medv~lstat+age,data=Boston)
summary(fit3)
temp <- Boston
plot(temp[,-dim(temp)[2]],pch=16,col=gray(1-(temp[,dim(temp)[2]]/max(temp[,dim(temp)[2]]))))
fit4=lm(medv~lstat+rm,data=Boston)
summary(fit4)
fit5=lm(medv~.,data=Boston)
summary(fit5)
fit6=lm(medv~.-age-indus,data=Boston)
summary(fit6)
fit7=lm(medv~.-age-indus-chas-crim,data=Boston)
summary(fit7)
fit8=lm(medv~lstat*rm,Boston)
summary(fit8)
plot(medv~lstat)
points(lstat,fitted(fit8),col="green",pch=20)
fit9=lm(medv~I(lstat^2),Boston)
summary(fit9)
plot(medv~lstat)
points(lstat,fitted(fit9),col="red",pch=20)
fit9=lm(medv~lstat +I(lstat^2),Boston)
summary(fit9)
plot(medv~lstat)
points(lstat,fitted(fit9),col="red",pch=20)
fit10=lm(medv~poly(lstat,18))
summary(fit10)
points(lstat,fitted(fit10),col="blue",pch=20)
fit11=lm(medv~poly(lstat,5))
summary(fit11)
points(lstat,fitted(fit11),col="green",pch=20)
fitprueba=lm(medv~lstat +rm +I(lstat * rm) +I(lstat^2) +I(lstat^2 * rm),Boston)
summary(fitprueba)
plot(medv~lstat)
points(lstat,fitted(fitprueba),col="red",pch=20)
yprime=predict(fit8,Boston)
sqrt(sum(abs(Boston$medv-yprime)^2)/length(yprime))
xtra <- read.csv("california.dat", comment.char = "@")
xtra <- read.csv("california.dat", comment.char = "@")
setwd("C:/Users/herpe/Dropbox/zMaster/zRStudio/Master-en-Ciencia-De-Datos-e-Ingeniería-de-Computadores/1 Introduccion a la Ciencia de Datos/3 Ejercicios regresion")
names(xtra) <- c("Longitude", "Latitude", "HousingMedianAge",
"TotalRooms", "TotalBedrooms", "Population", "Households", "MedianIncome", "MedianHouseValue")
xtra <- read.csv("california.dat", comment.char = "@")
names(xtra) <- c("Longitude", "Latitude", "HousingMedianAge",
"TotalRooms", "TotalBedrooms", "Population", "Households", "MedianIncome", "MedianHouseValue")
n <- length(names(xtra)) - 1
names(xtra)[1:n] <- paste ("X", 1:n, sep="")
names(xtra)[n+1] <- "Y"
help(xtra)
??xtra
temp <- xtra
plotY <- function (x,y) {
plot(temp[,y]~temp[,x], xlab=paste(names(temp)[x]," X",x,sep=""), ylab=names(temp)[y])
}
par(mfrow=c(2,4))
x <- sapply(1:(dim(temp)[2]-1), plotY, dim(temp)[2])
par(mfrow=c(1,1))
fit1X6=lm(xtra$Y~xtra$X6)
fit1X6
fit2X2=lm(xtra$Y~xtra$X2)
fit2X2
fit3X8=lm(xtra$Y~xtra$X8)
fit3X8
summary(fit1X6) #0.0005582
par(mfrow=c(3,1))
plot(xtra$Y~xtra$X6)
abline(fit1X6,col="red")
confint(fit1X6)
summary(fit2X2) #0.02074
plot(xtra$Y~xtra$X2)
abline(fit2X2,col="blue")
confint(fit2X2)
summary(fit3X8) #0.4734
plot(xtra$Y~xtra$X8)
abline(fit3X8,col="green")
confint(fit3X8)
par(mfrow=c(1,1))
sqrt(sum(fit1X6$residuals^2)/length(fit1X6$residuals))
fit4X6X2=lm(xtra$Y~xtra$X6+xtra$X2)
summary(fit4X6X2) #0.02234
fit5X6X8=lm(xtra$Y~xtra$X6+xtra$X8)
summary(fit5X6X8) #0.4742
fit6X2X8=lm(xtra$Y~xtra$X2+xtra$X8)
summary(fit6X2X8) #0.4814
fit7X2X6X8=lm(xtra$Y~xtra$X2+xtra$X6+xtra$X8)
summary(fit7X2X6X8) #0.4828
fit8Todos=lm(Y~.,data=xtra)
summary(fit8Todos) #0.637
source('C:/Users/herpe/Dropbox/zMaster/zRStudio/Master-en-Ciencia-De-Datos-e-Ingeniería-de-Computadores/1 Introduccion a la Ciencia de Datos/3 Ejercicios regresion/Laboratorio1.R')
